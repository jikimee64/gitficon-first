name: Deploy To EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Github Repository 파일 불러오기
        uses: actions/checkout@v3

      # github actions 서버 확인
      - name: Test
        run: |
          ls
          pwd

      - name: JDK 17버전 설치
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: db-core.yml 파일 만들기
        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./storage/db-core/src/main/resources/db-core.yml

      - name: 테스트 및 빌드하기
        run: ./gradlew core:core-api:clean core:core-api:build

      - name: 빌드된 파일 이름 변경하기
        run: mv ./core/core-api/build/libs/app.jar ./app.jar

        # $GITHUB_SHA는 는 커밋 ID
        # tar.gz , appspect.yml, scripts 폴더를 압축
      - name: 압축하기
        run: tar -czvf $GITHUB_SHA.tar.gz project.jar appspec.yml scripts

      - name: AWS Resource에 접근할 수 있게 AWS credentials 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: S3에 프로젝트 폴더 업로드하기
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.tar.gz s3://ordersystem-server/$GITHUB_SHA.tar.gz

      - name: Code Deploy를 활용해 EC2에 프로젝트 코드 배포
        run: aws deploy create-deployment
          --application-name ordersystem-server
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name Production
          --s3-location bucket=ordersystem-server,bundleType=tgz,key=$GITHUB_SHA.tar.gz
